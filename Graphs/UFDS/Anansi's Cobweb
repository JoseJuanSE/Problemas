#include<bits/stdc++.h>
//name: Anansi's Cobweb
//url: https://acm.timus.ru/problem.aspx?space=1&num=1671
using namespace std;
struct UFDS{
	int ns;
	vector<int> r,p;
	UFDS(int n){
		ns=n;
		n++;
		r.assign(n,1);
		p.assign(n,1);
		for(int i=0;i<n;i++)p[i]=i;
	}
	int findset(int x){return p[x]==x?x:p[x]=findset(p[x]);}
	int numset(){return ns;}
	bool Unir(int i,int j){
		int x=findset(i),y=findset(j);
		if(x==y)
			return false;
		ns--;
		if(r[x]<r[y])
			swap(x,y);
		if(r[x]==r[y])
			r[x]++;
		p[y]=x;
		return true;	
	}	
};
int main(){
	ios_base::sync_with_stdio(0);cin.tie(0);
	int n,m,q;
	cin>>n>>m;
	UFDS s(n);
	vector<pair<int,int> > vp;
	set<int> hacer;
	
	for(int i=0;i<m;i++){
		int x,y;
		cin>>x>>y;
		vp.push_back(make_pair(x,y));
		hacer.insert(i+1);
	}
	cin>>q;
	vector<int> que;
	while(q--){
		int x;
		cin>>x;
		que.push_back(x);
		hacer.erase(x);
	}
	for(int i:hacer){
		s.Unir(vp[i-1].first,vp[i-1].second);
	}
	reverse(que.begin(),que.end());
	stack<int> ans;
	for(int i:que){
		ans.push(s.numset());
		s.Unir(vp[i-1].first,vp[i-1].second);
	}
	while(!ans.empty()){
		cout<<ans.top()<<" ";
		ans.pop();
	}
	return 0;
}
